{//; backup working version, just in case.}
{//;changelog 2018-08-04
- added Opponent
- added preparation time
2018-08-05: added SCANNING status
2018-08-12: added local times for all memebers when called with a valid ws-tag or from a -ws channel
2018-09-18: -jordan. Added recleague-ws and forbid member times being displayed in public channels
2018-09-19: added public restriction if called from opponent channels or from allies
to-do: delete the local times list after a timeout to keep the ws-channel tidy
}
{//;shows WS status for all BSO corps}
{//;
{if;{userid};!=;383227005589782528;The command is being worked on, please be patient!{return}}
}
{timer;{delete};3s}
{set;~mainwsTags;["black-ws","final-ws","enf-ws","dauntless-ws","obsidian-ws"]}
{set;~altwsTags;["gmu-ws","prophecy-ws","recleague-ws"]}
{set;~maincorpNicks;Black;Final;Enforcers;Dauntless;Obsidian}
{set;~altcorpNicks;G.M.U.;Prophecy;RecLeague}
{set;~maincorpIDs;387715016222048265;387715242957864971;387715522575204352;401489230951481354;406431073296318465}
{set;~altcorpIDs;472262667789139988;472262704984489984;490946875768176641}
{set;~wsChannels;["384350754363670528","382541038973222915","382541094438699009","415943986147098624"]}
{set;~vsChannels;["479306306981724170","410887759893626881","423596924768354304","423595847679475732"]}{//; consider public}
{set;~everyoneCategory;372174329456230403}
{set;~allyrole;455134557532848139}
{set;~chId;{channelid}}{set;~chCat;{channelcategory}}{set;~userid;{userid}}
{//;
{set;~chCat;384331980852166656}{set;~chId;382541038973222915}{//;simulate call from enf-ws}
{set;~chCat;379606694508101642}{set;~chId;368396489455697920}{//;simulate call from members}
{set;~chCat;372174329456230403}{set;~chId;368229482579886094}{//;simulate call from enf-opponent}
{if;{userid};==;383227005589782528;{set;~userid;390220162906718208}}{//; simulate an ally}
}
{if;{get;~chCat};==;{get;~everyoneCategory};{set;~public;1};{set;~public;}}
{if;{indexof;{get;~vsChannels};{get;~chId}};!=;-1;{set;~public;1}}{//; treat -vs-opponent channels as public too}
{if;{userhasrole;{get;~allyrole};{get;~userid}};{set;~public;1}}{//; treat allies as public too}
{//;
{set;~dbgchannel;482308841975971840}{if;{channelid};==;{get;~dbgchannel};{set;~public;1};{set;~public;}}{//;override}
}
{if;0{get;~public};
	{set;~wsTags;{get;~mainwsTags}}
	{set;~corpNicks;{get;~maincorpNicks}}
	{set;~corpIDs;{get;~maincorpIDs}}
;
	{set;~wsTags;{concat;{get;~mainwsTags};{get;~altwsTags}}}
	{set;~corpNicks;{concat;{get;~maincorpNicks};{get;~altcorpNicks}}}
	{set;~corpIDs;{concat;{get;~maincorpIDs};{get;~altcorpIDs}}}
}
{//;
public={get;~public}, chID={get;~chId}, chCat={get;~chCat}
}
{//; if called with ws!=-tag or called from -ws channel - give local time for members}
{function;timeDiff;
  {void;
    {set;~time;}
    {if;{paramslength};<;2;;{//; we need 2 timestamps given}
  	{set;~t1;{params;0}}{set;~t2;{params;1}}
    {set;~showZeroDays;0}{if;{paramslength};>;2;{set;~showZeroDays;{params;2}}}
  	{set;~sec;{abs;{math;-;{get;~t2};{get;~t1}}}}
	{set;~days;{floor;{math;/;{get;~sec};86400}}}
		{//;Parse Remaining Hours in Days:}
	{set;~hours;{floor;{math;/;{math;%;{get;~sec};86400};3600}}}
		{//;Parse Time to Hours:}
	{set;~hours2;{floor;{math;/;{get;~sec};3600}}}
		{//;Parse Time to Minutes:}
	{set;~minutes;{floor;{math;/;{math;%;{get;~sec};3600};60}}}
 {//;       {set;~wsT;{get;~wsd}d {get;~wsdh}h {get;~wsm}m}	}
    {set;~time;}
  	{if;{get;~days};>;0;
      	{set;~time;{get;~days}d{space}}
      	;
      	{if;{get;~showZeroDays};>;0;{set;~time;{get;~days}d{space}}}{//;{set;~time;{space;3}}}
  	}
	{set;~time;{get;~time}{realpad;{get;~hours};2;0;left}:{realpad;{get;~minutes};2;0;left}}
    }
  }{get;~time}  
}
{set;~wsTagIndex;-1}{//;default value - show WS status for main corps}
{if;{argslength};>;0;
  	{set;~indByArg;{indexof;{get;~wsTags};{lower;{args;0}}}}
  	{if;{get;~indByArg};!=;-1;{set;~wsTagIndex;{get;~indByArg}};{set;~wsTagIndex;-2}}
}
{//;  channelid={channelid}, wsChannels={join;{get;~wsChannels};,}, wsTagInd={get;~wsTagIndex}}
{switch;{get;~wsTagIndex};
-2;{//; arg incorrect}
{set;~error;`{args}` is not a valid WS corp. Please specify as discord role.{newline}}
;  
-1;{//; arg not given - get the corp index from the corp channel}
  {set;~indByChannel;{indexof;{get;~wsChannels};{get;~chId}}}
  {if;{get;~indByChannel};!=;-1;{//; called from valid channel}
    {set;~wsTagIndex;{get;~indByChannel}}
  	{set;~corpIDs;["{get;~corpIDs;{get;~wsTagIndex}}"]}
  	{set;~corpNicks;["{get;~corpNicks;{get;~wsTagIndex}}"]}
  }
;
{//; correct ws-tag given - return info for this corp only + times for all members}
  {set;~corpIDs;["{get;~corpIDs;{get;~wsTagIndex}}"]}
  {set;~corpNicks;["{get;~corpNicks;{get;~wsTagIndex}}"]}
}
{set;~corpWS;[]}
{set;~res}
{set;~index;-1}
{void;{repeat;
  {increment;~index}
  {set;~roleid;{get;~corpIDs;{get;~index}}}
  {if;{length;{get;_{get;~roleid}WSScan}};>;0;{set;~wsScan;{get;_{get;~roleid}WSScan}};{set;~wsScan;-1}}
  {if;{length;{get;_{get;~roleid}WSEnd}};>;0;{set;~wsEnd;{get;_{get;~roleid}WSEnd}};{set;~wsEnd;-1}}
  {if;{logic;||;{bool;{get;~wsEnd};>;0};{bool;{get;~wsScan};>;0}};
	{if;{get;~wsScan};>;0;
      {set;~wsStatus;SCANNING{get;_{get;~roleid}WSScanTier}{space}/{space}for{space}{trim;{func.timeDiff;{get;~wsScan};{time;X};0}}}
      ; {//; not scanning}
      {set;~wsSecondsLeft;{math;-;{get;~wsEnd};{time;X}}}
      {if;{get;~wsSecondsLeft};<;0;
        {set;~wsStatus;Ended}	      	{//;if time is up, set status to Ended}
      	;{//; not ended}
      	{if;{get;~wsSecondsLeft};>;388800;  {//;if still in preparation period}
        	{set;~wsPrep;Starts in{space}} {//;show prep time remaining}
        	{set;~wsEnd;{math;-;{get;~wsEnd};388800}}
        	;
        	{set;~wsPrep;}
      	}
        {if;{length;{get;~wsPrep}};!=;0;
          {set;~wsTime;{func.timeDiff;{get;~wsEnd};{time;X};0}}
          ;
          {set;~wsTime;{realpad;{func.timeDiff;{get;~wsEnd};{time;X};0};8;{space};left}}
        }
{//;        {set;~wsTime;{func.timeDiff;{get;~wsEnd};{time;X};{if;{length;{get;~wsPrep}};!=;0;0;1}}}}
      	{//;Check WS opponent, if set add it to the status:}
		{set;~wsOpp;{get;_{get;~roleid}WSOpp}}
  		{if;{length;{get;~wsOpp}};>;0;{set;~wsOpponent;{space}v {get;~wsOpp}};{set;~wsOpponent;}}
        
        {set;~wsStatus;{get;~wsPrep}{get;~wsTime}{get;~wsOpponent}}
      }
    }
    ; {//; WSEnd and WSScan not set}
    {set;~wsStatus;---}{//;WS-tag not found}
  }
  {push;~corpWS;{get;~wsStatus}}
  {if;{length;{get;~res}};>;0;{set;~res;{get;~res}{newline}}}
  {set;~res;{get;~res}{realpad;{get;~corpNicks;{get;~index}};9;{space};left}: {get;~wsStatus;}}
  ;
  {length;{get;~corpIDs}}
}}
{//; just a backup
{set;~corpWS;[]}
{set;~res}
{set;~index;-1}
{void;{repeat;
  {increment;~index}
  {set;~roleid;{get;~corpIDs;{get;~index}}}
  {if;{length;{get;_{get;~roleid}WSScan}};>;0;{set;~wsScan;{get;_{get;~roleid}WSScan}};{set;~wsScan;-1}}
  {if;{length;{get;_{get;~roleid}WSEnd}};>;0;{set;~wsEnd;{get;_{get;~roleid}WSEnd}};{set;~wsEnd;-1}}
  {if;{logic;||;{bool;{get;~wsEnd};>;0};{bool;{get;~wsScan};>;0}};
	{if;{get;~wsScan};>;0;
      {set;~wsStatus;SCANNING{get;_{get;~roleid}WSScanTier}{space}/{space}for{space}{trim;{func.timeDiff;{get;~wsScan};{time;X};0}}}
      ; {//; not scanning}
      {set;~wsSecondsLeft;{math;-;{get;~wsEnd};{time;X}}}
      {if;{get;~wsSecondsLeft};<;0;
        {set;~wsStatus;Ended}	      	{//;if time is up, set status to Ended}
      	;
        {//; not ended}
      	{if;{get;~wsSecondsLeft};>;388800;  {//;if still in preparation period}
        	{set;~wsPrep;Starts in{space}} {//;show prep time remaining}
        	{set;~wsSecondsLeft;{math;-;{get;~wsSecondsLeft};388800}}
        	;
        	{set;~wsPrep;}
      	}
		{//;Parse wsSecondsLeft to Days:}
		{set;~wsd;{floor;{math;/;{get;~wsSecondsLeft};86400}}}
		{//;Parse Remaining Hours in Days:}
		{set;~wsdh;{floor;{math;/;{math;%;{get;~wsSecondsLeft};86400};3600}}}
		{//;Parse Time to Hours:}
		{set;~wsh;{floor;{math;/;{get;~wsSecondsLeft};3600}}}
		{//;Parse Time to Minutes:}
		{set;~wsm;{floor;{math;/;{math;%;{get;~wsSecondsLeft};3600};60}}}
 {//;       {set;~wsT;{get;~wsd}d {get;~wsdh}h {get;~wsm}m}	}
        {set;~wsTime;}{if;{get;~wsd};>;0;{set;~wsTime;{get;~wsd}d{space}};{if;{length;{get;~wsPrep}};==;0;{set;~wsTime;{space;3}}}}
        {set;~wsTime;{get;~wsTime}{realpad;{get;~wsdh};2;0;left}:{realpad;{get;~wsm};2;0;left}}
      	{//;Check WS opponent, if set add it to the status:}
		{set;~wsOpp;{get;_{get;~roleid}WSOpp}}
  		{if;{length;{get;~wsOpp}};>;0;{set;~wsOpponent;{space}v {get;~wsOpp}};{set;~wsOpponent;}}
        
        {set;~wsStatus;{get;~wsPrep}{get;~wsTime}{get;~wsOpponent}}
      }
    }
    ; {//; WSEnd and WSScan not set}
    {set;~wsStatus;---}{//;WS-tag not found}
  }
  {push;~corpWS;{get;~wsStatus}}
  {if;{length;{get;~res}};>;0;{set;~res;{get;~res}{newline}}}
  {set;~res;{get;~res}{realpad;{get;~corpNicks;{get;~index}};9;{space};left}: {get;~wsStatus;}}
  ;
  {length;{get;~corpIDs}}
}}
}
{function;cleanNick;{//;userid;[maxlen]}
  	{set;~basenick;{usernick;{params;0}}}
	{void;{while;{get;~basenick};includes;[; {//;remove all bracketed parts}
  		{set;~openbracket;{indexof;{get;~basenick};[}}
  		{set;~closebracket;{indexof;{get;~basenick};]}}
  		{set;~base1;{substring;{get;~basenick};0;{math;-;{get;~openbracket};1}}}
    	{set;~base2;{substring;{get;~basenick};{math;+;{get;~closebracket};1}}}
    	{set;~basenick;{trim;{get;~base1}{get;~base2}}}
	}}
{if;{paramslength};>;1;{substring;{get;~basenick};0;{params;1}};{get;~basenick}}
}
{set;~localTimes;[]}
{set;~head;{realpad;Member name;15;{space};right}{space}Time{space;3}(seen{space;5}){newline}}
{void;{if;{get;~wsTagIndex};>;-1;
  	{set;~role;{get;~corpIDs;0}}
	{set;~arrayOfMembers;{rolemembers;{get;~role};quiet}}
  	{void;{foreach;~userid;{get;~arrayOfMembers};
      	{set;~userNick;{trim;{func.cleanNick;{get;~userid};15}}}
  		{set;~userTime;{time;HH:mm;;;{usertimezone;{get;~userid}}}}
        {set;~seen;{get;_{get;~userid}_last_post}}
  		{if;0{get;~seen};{set;~ago;{space}({trim;{func.timeDiff;{time;X};{time;X;{get;~seen}};0}} ago)};{set;~ago;}}
	    {push;~localTimes;{realpad;{get;~userNick};15;{space};right}{space}{if;{usertimezone;{get;~userid}};==;UTC;( TZ? );{get;~userTime}}{space}{get;~ago}}
	}}
}}
{if;{length;{get;~error}};==;0;
**WHITE STAR TIME REMAINING**
```{get;~res}```
{if;{length;{get;~localTimes}};>;0;
  {if;0{get;~public};Detailed member information is not available in public channels.{newline};
  **Local times for {get;~wsTags;{get;~wsTagIndex}} members**```{get;~head}{join;{get;~localTimes};{newline}}```}};{get;~error}}{if;0{get;~public}; *Additional information is available when this command is run from a members-only channel.*}