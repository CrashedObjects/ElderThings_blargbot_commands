{//; cc wsscan - set scanning status for a given ws-tag}
{//; changelog
2018-08-05: - cc created
2018-08-11: - send messages to relevant ws channels
2018-08-12: - check if already scanning / don't send messages more than once. 
2018-11-28: - wsinit (POH added)
2018-11-30: moved to guild vars
2019-04-21: ping bot-dev in -vs channel when clearing opponents
2019-05-03: checked against 2 WS per corp
2019-07-06 - added rolemention to *-commands announcement
			to-do: remove parenthesis from tier - need to correct in wstimes, wsresult
}
{//;to-do: 
 - if run by ws-cmdr, select the channel from his roles;
 - restrict the channels from which can be run}
{set;~nomsg;0}{//; for debugging: 1 to be quiet, 0 to send all messages}
{execcc;wsinit;g}
{set;~ws-tags;{get;_ws-tag}}	{//; used to be _ws-tags, which contained the ws-role-names, compared to fixed ws-tags}
{set;~ws-role;{get;_ws-role}}
{set;~ws-chan-opp;{get;_ws-chan-opp}}
{set;~ws-chan-comm;{get;_ws-chan-comm}}
{set;~oppRoles;{get;_ws-role-opp}}
{set;~tiers;{get;_wsTiers}}
{set;~howToUse;Proper syntax:```!WSscan <WS-tag> [tier]{newline}WS-tags: {join;~ws-tags;,{space}}{newline}Tier: {join;~tiers;,{space}}```}
{if;
    {length;{argsarray}};<;1;
    You must include a WS-tag{newline}{get;~howToUse}{return};
}
{set;~wsIndex;{indexof;{get;~ws-tags};{upper;{args;0}}}}
{if;{get;~wsIndex};==;-1;
	{set;~testRole;{roleid;{args;0};quiet}}
	{if;{get;~testRole};!=;;{set;~wsIndex;{indexof;{get;_ws-role};{get;~testRole}}}}
}
{if;{get;~wsIndex};>;-1;
	{set;~roleid;{get;~ws-role;{get;~wsIndex}}};
	{args;0} doesn't match a WS tag{newline}{get;~howToUse}{return}
}
{if;{get;~wsIndex};>;{length;{get;~ws-chan-opp}};{set;~vsCh;};{set;~vsCh;{get;~ws-chan-opp;{get;~wsIndex}}}}
{if;
	{argslength};>;1;	{//;tier specified - get number only}
  	{set;~tier;{parseint;{args;1}}}
  	{if;{get;~tier};==;NaN;
      	{get;~howToUse}{return}
      	;
  		{if;
          	{indexof;{get;~tiers};{get;~tier}};==;-1;
          	{set;~tier;}
      		;
      		{set;~tier;{space}({get;~tier}v)}
      	}
    }
  	;
  	{set;~tier;}
}
{if;{get;~roleid};==;;{return}}
{//;check if already scanning}
  {if;{length;{get;_{get;~roleid}WSScan}};>;0;{set;~wsScan;{get;_{get;~roleid}WSScan}};{set;~wsScan;-1}}
  {if;{length;{get;_{get;~roleid}WSEnd}};>;0;{set;~wsEnd;{get;_{get;~roleid}WSEnd}};{set;~wsEnd;-1}}
  {if;{logic;&&;{bool;{get;~wsScan};>;0};{bool;{get;~wsEnd};<;{get;~wsScan}}};
    {if;{get;_{get;~roleid}WSScanTier};==;{get;~tier};{//; already scanning the same tier, do nothing}
      {return};
      {set;~nomsg;1}{//; already scanning but different tier - save info, don't send messages}
    };
  }
{set;_{get;~roleid}WSScan;{time;X}}
{set;_{get;~roleid}WSScanTier;{get;~tier}}
{set;_{get;~roleid}WSEnd;}
{//; reset all members ship info {execcc;wsship;{get;~role};clearAll;YaDontWannaKnow}}
	{set;~arrayOfMembers;{rolemembers;{get;~roleid}}}
	{set;~shipTypes;["B","T","M"]}
  	{void;{foreach;~userid;{get;~arrayOfMembers};
      	{foreach;~st;{get;~shipTypes};{set;_WSShip{get;~userid}_{get;~ws-tags;{get;~wsIndex}}_{get;~st};}}
	}}
{set;~msg;**{rolename;{get;~roleid}} is SCANNING{get;~tier}**}
{get;~msg}
{//; clear ws-opponent}
{trim;
{//;{set;~oppRoles;["423597234446139433","420267854110261258","423597167429550082","423595988784119809"]}}
{set;~usersRemoved;[]}{set;~notRemoved;[]}{set;~oppmsg;[]}
{if;{length;{get;~oppRoles}};>=;{get;~wsIndex};{//; role found}
  {set;~opproleid;{get;~oppRoles;{get;~wsIndex}}}{//;remove all members of this role}
  {if;{get;~opproleid};!=;;{//; global arrays will have zelo-len value when roleids don't exist}
	{set;~arrayOfMembers;{rolemembers;{get;~opproleid};quiet}}{//;  or other crazy values for that matter}
  	{void;{foreach;~oppuserid;{get;~arrayOfMembers};
      	{set;~usernick;{usernick;{get;~oppuserid}}}
  		{if;{removerole;{get;~opproleid};{get;~oppuserid}};
          {push;~oppmsg;☑ `{get;~usernick}` successfully removed from `{rolename;{get;~opproleid}}` role.}
          {push;~usersRemoved;{get;~usernick}}
          ;
          {push;~notRemoved;{get;~usernick}}
          {push;~oppmsg;❌ `{get;~usernick}` couldn\'t be removed from `{rolename;{get;~opproleid}}`. They probably were already.}
        }
	}}
    {push;~oppmsg;{rolemention;447472629146714166} type `!tidy -q xzq -I -y` to clear this channel}
  }
}}
{if;{length;{get;~usersRemoved}};>;0;Previous opponents removed from {rolename;{get;~opproleid}}: {join;{get;~usersRemoved};,{space}}{if;0{get;~vsCh};{void;{send;{get;~vsCh};Removed opponents from this channel: {join;{get;~usersRemoved};{newline}}}}}}
{if;{length;{get;~notRemoved}};>;0;Previous opponents NOT removed from {rolename;{get;~opproleid}}: {join;{get;~notRemoved};,{space}}}
{void;{send;{get;~vsCh};{rolemention;bot-dev} prepare this channel for the next match by resetting the channel name and typing `!tidy -q xzq -I -y` to clear the old messages.}}
{//;	{if;{length;{get;~oppmsg}};>;0;{join;{get;~oppmsg};{newline}}}}
{//; send msg to #ws, #WS planning, ws-tag-obj channels}
{if;{get;~nomsg};==;1;{return};}{//; bye-bye}
  {set;~ChannelNames;["ws","WS-planning"]}
  {set;~channelIDs;["375035878952927235","422043189516435474"]}
  {for;~index;0;<;{length;{get;~channelIDs}};
  	{set;~chID;{get;~channelIDs;{get;~index}}}
  	{if;{channelid};!=;{get;~chID};
		{void;{send;{get;~chID};{get;~msg}}}
    }
  }
  {set;~chID;{get;~ws-chan-comm;{get;~wsIndex}}}
  {if;{get;~chID};>;0;
  	{if;{channelid};!=;{get;~chID};
  		{void;{send;{get;~chID};{get;~msg}.{space}{rolemention;{get;~roleid}}, Stay in corp!}}
    }
  }