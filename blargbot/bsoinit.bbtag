{//; this command will create guild variable with all bso corp info. use !bsoinit export to generate a text file with all the data}
{//; corp types - main, alts, closed. a set of arrays will be made for each type and another set including both main and alts.}
{set;main;["bso","fin","poh","dau","obn"]}	{//; use this as suffix for esach corp_ below }
{set;alts;["gmu","pro","alt"]}
{set;closed;["enf"]}
{//; ENF phasout section - delete after we close the corp}
{set;~enfPhaseOut;{math;+;{get;_387715522575204352WSEnd};86400}}	{//; +24 hours}
{if;{time;X};<=;{get;~enfPhaseOut};
	{set;main;["bso","fin","poh","enf","dau","obn"]}
	{set;closed;[]}
}
{//; end of ENF phaseout section}
{//; general template block for corp data collected. these fields will be present in the created guild arrays}
{set;corp_template;	{//; leave this empty, needed to initialize the arrays. all corp blocks must have the same fields, in any order}
	corp-role,
  	corp-nick,
  	corp-size,
	rs-icon,
	ws-role,
    ws-role-lead,
	ws-tag,
	ws-icon,
	ws-categ,
  	ws-chan-comm,
	ws-chan-gen,
	ws-chan-lead,
	ws-chan-opp,
	ws-role-opp,
	active-from,
	active-to
}
{//; start of corp info section - this is the place to update values or create new corps }
{set;corp_bso;
	corp-role:396993641480192000,
	corp-nick:BLACK,
  	corp-size:32,
	rs-icon:<:BSO_RS:510205929254420493>,
	ws-role:387715016222048265,
    ws-role-lead:386676184685215744,
	ws-tag:BSO-WS,
	ws-icon:<:BSO_WS:509790619577614367>,
	ws-categ:384350365308420106,
	ws-chan-comm:390869477446909963,
	ws-chan-gen:384350754363670528,
	ws-chan-lead:387620392186937345,
	ws-chan-opp:479306306981724170,
	ws-role-opp:423597234446139433,
	active-from:2017-12-01,
	active-to:
}
{set;corp_fin;
	corp-role:396993657653428224,
	corp-nick:FINAL,
  	corp-size:31,
	rs-icon:<:FIN_RS:510206415563128853>,
	ws-role:387715242957864971,
  	ws-role-lead:389605769508552706,
	ws-tag:FIN-WS,
	ws-icon:<:FIN_WS:509786098747179019>,
	ws-categ:384325663404064771,
	ws-chan-comm:386256106151739392,
	ws-chan-gen:382541038973222915,
	ws-chan-lead:388121039546351618,
	ws-chan-opp:410887759893626881,
	ws-role-opp:420267854110261258,
	active-from:2017-12-01,
	active-to:
}
{set;corp_poh;
	corp-role:516981099260280853,
	corp-nick:POH,
  	corp-size:31,
	rs-icon:<:PoH_RS:510205040552574976>,
	ws-role:516974518778986540,
  	ws-role-lead:516974522495270912,
	ws-tag:POH-WS,
	ws-icon:<:PoH_WS:509790302622711808>,
	ws-categ:516982280783134720,
	ws-chan-comm:516987103049941003,
	ws-chan-gen:516986117837291530,
	ws-chan-lead:516987317416886272,
	ws-chan-opp:516987229105684500,
	ws-role-opp:516974526500700161,
	active-from:2018-11-26,
	active-to:
}
{set;corp_enf;
	corp-role:396993660455092224,
	corp-nick:ENF,
  	corp-size:30,
	rs-icon:<:ENF_RS:510205040552574976>,
	ws-role:387715522575204352,
  	ws-role-lead:397371000171266048,
	ws-tag:ENF-WS,
	ws-icon:<:ENF_WS:509790302622711808>,
	ws-categ:384331980852166656,
	ws-chan-comm:418610565867372554,
	ws-chan-gen:382541094438699009,
	ws-chan-lead:394903358215028757,
	ws-chan-opp:423596924768354304,
	ws-role-opp:423597167429550082,
	active-from:2017-12-14,
	active-to:2018-11-30
}
{set;corp_dau;
	corp-role:401486171932196864,
	corp-nick:DAU,
  	corp-size:30,
	rs-icon:<:DAU_RS:510205945276661782>,
	ws-role:401489230951481354,
  	ws-role-lead:401489117676044290,
	ws-tag:DAU-WS,
	ws-icon:<:DAU_WS:509790315176001538>,
	ws-categ:415723191646945290,
	ws-chan-comm:492932807031783425,
	ws-chan-gen:415943986147098624,
	ws-chan-lead:492934432328646657,
	ws-chan-opp:423595847679475732,
	ws-role-opp:423595988784119809,
	active-from:2018-02-21,
	active-to:
}
{set;corp_obn;
	corp-role:406418309454757899,
	corp-nick:OBN,
  	corp-size:25,
	rs-icon:<:OBN_RS:510206456205803520>,
	ws-role:406431073296318465,
  	ws-role-lead:406433117004365834,
	ws-tag:OBN-WS,
	ws-icon:<:OBN_WS:509790326257614851>,
	ws-categ:499614196032339979,
	ws-chan-comm:499622267240579072,
	ws-chan-gen:499621793225637910,
	ws-chan-lead:,
	ws-chan-opp:503674249496625164,
	ws-role-opp:503674292823916571,
	active-from:2018-05-01,
	active-to:
}
{set;corp_gmu;
	corp-role:,
	corp-nick:GMU,
  	corp-size:25,
	rs-icon:,
	ws-role:472262667789139988,
  	ws-role-lead,
	ws-tag:GMU-WS,
	ws-icon:,
	ws-categ:499614362256932864,
	ws-chan-comm:499622684733210624,
	ws-chan-gen:499622850395766784,
	ws-chan-lead:,
	ws-chan-opp:,
	ws-role-opp:,
	active-from:,
	active-to:
}
{set;corp_pro;
	corp-role:,
	corp-nick:PRO,
  	corp-size:25,
	rs-icon:,
	ws-role:472262704984489984,
  	ws-role-lead,
	ws-tag:PRO-WS,
	ws-icon:,
	ws-categ:499614362256932864,
	ws-chan-comm:513032057945980931,
	ws-chan-gen:513032163189587968,
	ws-chan-lead:,
	ws-chan-opp:,
	ws-role-opp:,
	active-from:,
	active-to:
}
{set;corp_alt;
	corp-role:,
	corp-nick:ALT,
  	corp-size:25,
	rs-icon:,
	ws-role:490946875768176641,
  	ws-role-lead,
	ws-tag:ALT-WS,
	ws-icon:,
	ws-categ:499614362256932864,
	ws-chan-comm:,
	ws-chan-gen:,
	ws-chan-lead:,
	ws-chan-opp:,
	ws-role-opp:,
	active-from:,
	active-to:
}
{//; end of corp info section }
{//; create temp arrays}
{void;
	{set;arrays;{split;{get;corp_template};,}}
	{foreach;item;arrays;{set;~{trim;{get;item}}-main;[]}{set;~{trim;{get;item}}-alts;[]}{set;~{trim;{get;item}}-closed;[]}}

{foreach;index;main;
	{set;corpVar;{get;corp_{get;index}}}
	{set;corpArr;{split;{get;corpVar};,}}
	{foreach;item;corpArr;
		{set;itemArr;{split;{trim;{get;item}};:}}
		{set;itemName;{shift;itemArr}}
		{set;itemValue;{join;itemArr;:}}
		{if;{isarray;{get;~{get;itemName}-main}};==;false;{set;~{get;itemName}-main;[]}}
		{push;~{get;itemName}-main;{get;itemValue}}
	}
}
{foreach;index;alts;
	{set;corpVar;{get;corp_{get;index}}}
	{set;corpArr;{split;{get;corpVar};,}}
	{foreach;item;corpArr;
		{set;itemArr;{split;{trim;{get;item}};:}}
		{set;itemName;{shift;itemArr}}
		{set;itemValue;{join;itemArr;:}}
		{if;{isarray;{get;~{get;itemName}-alts}};==;false;{set;~{get;itemName}-alts;[]}}
		{push;~{get;itemName}-alts;{get;itemValue}}
	}
}
{foreach;index;closed;
	{set;corpVar;{get;corp_{get;index}}}
	{set;corpArr;{split;{get;corpVar};,}}
	{foreach;item;corpArr;
		{set;itemArr;{split;{trim;{get;item}};:}}
		{set;itemName;{shift;itemArr}}
		{set;itemValue;{join;itemArr;:}}
		{if;{isarray;{get;~{get;itemName}-closed}};==;false;{set;~{get;itemName}-closed;[]}}
		{push;~{get;itemName}-closed;{get;itemValue}}
	}
}

{set;~corp-name-main;[]}{foreach;corp;~corp-role-main;{push;~corp-name-main;{rolename;{get;corp}}}} {//; pull from role names}
{set;~corp-name-alts;["G.M.U.","Prophecy","Alt Stars"]} {//; set manually as we have no corp-roles for them }

{set;~ws-tags-main;[]}{foreach;ws;~ws-role-main;{push;~ws-tags-main;{upper;{rolename;{get;ws}}}}}
{set;~ws-tags-alts;[]}{foreach;ws;~ws-role-alts;{push;~ws-tags-alts;{upper;{rolename;{get;ws}}}}}

{set;~corp-name;{concat;{get;~corp-name-main};{get;~corp-name-alts}}}
{set;~corp-nick;{concat;{get;~corp-nick-main};{get;~corp-nick-alts}}}
{set;~corp-role;{concat;{get;~corp-role-main};{get;~corp-role-alts}}}
{set;~corp-size;{concat;{get;~corp-size-main};{get;~corp-size-alts}}}
{set;~active-from;{concat;{get;~active-from-main};{get;~active-from-alts}}}
{set;~active-to;{concat;{get;~active-to-main};{get;~active-to-alts}}}
{set;~rs-icon;{concat;{get;~rs-icon-main};{get;~rs-icon-alts}}}
{set;~ws-tag;{concat;{get;~ws-tag-main};{get;~ws-tag-alts}}}
{set;~ws-tags;{concat;{get;~ws-tags-main};{get;~ws-tags-alts}}}
{set;~ws-icon;{concat;{get;~ws-icon-main};{get;~ws-icon-alts}}}
{set;~ws-role;{concat;{get;~ws-role-main};{get;~ws-role-alts}}}
{set;~ws-role-lead;{concat;{get;~ws-role-lead-main};{get;~ws-role-lead-alts}}}
{set;~ws-role-opp;{concat;{get;~ws-role-opp-main};{get;~ws-role-opp-alts}}}
{set;~ws-categ;{concat;{get;~ws-categ-main};{get;~ws-categ-alts}}}
{set;~ws-chan-comm;{concat;{get;~ws-chan-comm-main};{get;~ws-chan-comm-alts}}}
{set;~ws-chan-gen;{concat;{get;~ws-chan-gen-main};{get;~ws-chan-gen-alts}}}
{set;~ws-chan-lead;{concat;{get;~ws-chan-lead-main};{get;~ws-chan-lead-alts}}}
{set;~ws-chan-opp;{concat;{get;~ws-chan-opp-main};{get;~ws-chan-opp-alts}}}

{//; set guild arrays}
{set;dbg;[]}
{set;arrays;{split;{get;corp_template};,}}{push;arrays;corp-name}{push;arrays;ws-tags}
{foreach;item;arrays;
  {set;item;{trim;{get;item}}}
  {set;_{get;item}-main;{get;~{get;item}-main}}
  {set;_{get;item}-alts;{get;~{get;item}-alts}}
  {set;_{get;item}-closed;{get;~{get;item}-closed}}
  {set;_{get;item};{get;~{get;item}}}
  {push;dbg;{get;item} ({length;{get;_{get;item}}} items): {join;{get;_{get;item}};,}}
}
{//; send message to #dbg that guild vars have been recreated}
{void;{send;482308841975971840;{if;{argslength};>;0;**{args;0}**:{space}}guild vars set by bsoinit on demand by {commandname}, ran by {usernick;{userid}} ({length;{get;dbg}} arrays)}}
{//; export options}
{if;{args;0};==;arrays;{file;{join;dbg;{newline}};bsoarrays.txt}}
{if;{args;0};==;export;
	{set;lines;[]}
  	{set;corpIndex;-1}
  	{foreach;corp;{concat;{get;main};{get;alts};{get;closed}};
      	{void;{increment;corpIndex}}
      	{push;lines;{lb}set{semi}corp_{get;corp}{semi}}
      	{set;fields;{split;{get;corp_template};,}}
      	{foreach;item;fields;
      		{set;item;{trim;{get;item}}}
          	{push;lines;{get;item}:{get;_{get;item};{get;corpIndex}}}
      	}
      	{push;lines;{rb}}
    }
    {file;{join;lines;{newline}};bsodata.txt}
}
}