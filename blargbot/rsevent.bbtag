{//;changelog
2018-10-19 - cc created
2018-12-04: halted, too many loops
2019-03-05: rework to reduce loops, adding season 3
2019-08-09: season 4
}
{//; rsevent [season] [member | corp]}
{function;inarr;{//; any of arr1 is in arr2}
{set;~found;0}
  {if;{isarray;{params;0}};==;true;{set;~arr1;{params;0}};{set;~arr1;["{join;{split;{params;0};,};","}"]}}
  {foreach;~item;{get;~arr1};{if;{indexof;{params;1};{get;~item}};!=;-1;{set;~found;1}}}
{get;~found}
}

{function;stats;{//; [start(X) [end]] [username | corpname] [season]}
  {set;~dbg;[]}
	{set;~start;{time;x;2018-10-01;YYYY-MM-DD}}
  	{set;~end;{time;x}}
  	{if;{paramslength};>;0;{set;~start;{time;x;{params;0};X}}}
  	{if;{paramslength};>;1;{set;~end;{time;x;{params;1};X}}}
 	{set;~userid;}{set;~corpid;}
    {set;~userA;[]}
  	{if;{logic;&&;{bool;{paramslength};>;2};{bool;{params;2};!=;}};
      {set;~corpid;{roleid;{params;2};quiet}}
      {if;{get;~corpid};!=;;
        {set;~userA;{rolemembers;{get;~corpid}}}
        ;
        {set;~userid;{userid;{params;2};quiet}}
        {if;{get;~userid};!=;;{push;~userA;{get;~userid}}}
      }
  	}
{push;~dbg;uA={get;~userA}}
{set;~enfClose;{time;x;2018-11-30;YYYY-MM-DD}}
{set;~rsLevels;[5,6,7,8,9,10]}
{set;~corps;["BSO","FIN","POH","DAU"]}{//;,"ENF"]}
{set;~alt0;Black;black;bso;blackstar order}
{set;~alt1;Final;final;fin}
{set;~alt2;PathOfHades;pathofhades;poh;PoH}
{//;{if;{logic;||;{bool;{get;~start};<=;{get;~enfClose}};{bool;{get;~end};>=;{get;~enfClose}}};}}
{if;{get;~start};<=;{get;~enfClose};
  {push;~corps;ENF}
  {set;~alt4;enforcers;enf;enfo;enforser;enforcer;enforsers}
}
{set;~alt3;Dauntless;dauntless;dau;dauntles}
{set;~minT;{time;x}}{set;~maxT;0}
{foreach;~rs;{get;~rsLevels};
  {foreach;~corp;{get;~corps};
    {set;~res_{get;~rs}_{get;~corp};}{set;~res_total_{get;~corp};0}
  }
  {set;~res_{get;~rs}_N/A;}{set;~res_total_N/A;0}
  {set;~res_{get;~rs}_total;0}
}
{set;~bad;[]}
	{set;~records;{get;_rsstats_IDs}}
	{set;~t;{get;~start}}
{//; find first record >= ~t}
	{set;~min;0}{set;~max;{math;-;{length;{get;~records}};1}}{set;~previ;-1}
	{set;~i;{rounddown;{math;/;{math;+;{get;~min};{get;~max}};2}}}
{void;
  	{while;{get;~previ};!=;{get;~i};
      {set;~rA;{split;{get;~records;{get;~i}};:}}
      {if;{length;{get;~rA}};!=;3;
        {push;~bad;#{get;~i}={get;~records;{get;~i}}}
        {void;{decrement;~i}}
        ;
		{if;{get;~rA;0};<;{get;~t};{set;~min;{get;~i}}}
		{if;{get;~rA;0};>;{get;~t};{set;~max;{get;~i}}}
		{set;~previ;{get;~i}}
		{set;~i;{rounddown;{math;/;{math;+;{get;~min};{get;~max}};2}}}
      }
	}
	{set;~index;{get;~max}}
  	{set;~rA;{split;{get;~records;{get;~index}};:}}
  	{push;~dbg;starting at #{get;~index} ({time;;{get;~rA;0};x})}
  	{set;~done;0}
}

{void;
	{while;{logic;&&;
      		{bool;{get;~index};<;{length;{get;~records}}};
      		{bool;{get;~done};==;0}
      	   };
 {if;{length;{get;~records;{get;~index}}};>;0;
  {set;~rsA;{split;{get;~records;{get;~index}};:}}
{if;{length;{get;~rsA}};!=;3;
    {push;~bad;#{get;~index}={get;~records;{get;~index}}}
	;
  {if;{get;~rsA;0};>;{get;~end};{set;~done;1}{push;~dbg;done #{get;~index}: {time;;{get;~rsA;0};x}}}
  {set;~rsQ;{get;_rsstats_queues;{get;~index}}}
  {if;{logic;&&;{bool;{indexof;{get;~rsLevels};{get;~rsA;1}};!=;-1}
    ;{bool;{get;~start};<=;{get;~rsA;0}}
    ;{bool;{get;~end};>=;{get;~rsA;0}}
    ;{logic;||;
      {bool;{length;{get;~userA}};==;0}
      ;{bool;{trim;{func.inarr;{get;~rsQ};{get;~userA}}};>;0}
    }
    };
    {if;{get;~minT};>;{get;~rsA;0};{set;~minT;{get;~rsA;0}}}
    {if;{get;~maxT};<;{get;~rsA;0};{set;~maxT;{get;~rsA;0}}}
    {set;~corp;}
    {void;{for;~i;0;<;{length;{get;~corps}};
    	{set;~corpIndex;{indexof;{get;~alt{get;~i}};{lower;{get;~rsA;2}}}}
    	{if;{get;~corpIndex};!=;-1;{set;~corp;{get;~corps;{get;~i}}}}
    }}
    {if;{get;~corp};==;;{set;~corp;N/A}}
    {if;{length;{get;~res_{get;~rsA;1}_{get;~corp}}};==;0;
      {set;~res_{get;~rsA;1}_{get;~corp};1}
      ;
      {void;{increment;~res_{get;~rsA;1}_{get;~corp}}}
    }
    {void;{increment;~res_total_{get;~corp};1}}
    {void;{increment;~res_{get;~rsA;1}_total}}
    {push;~dbg;ID#{get;~index}={get;~records;{get;~index}}, Q={get;~rsQ}}
  }
}
 }
  {increment;~index}
}}{set;~total;0}
{if;{length;{get;~bad}};>;0;{void;{send;482308841975971840;bad records:{newline}{join;{get;~bad};{newline}}}}}
{//;{if;{length;{get;~dbg}};>;0;{void;{send;482308841975971840;DBG:{newline}{join;{get;~dbg};{newline}}}}}}
RS runs {if;{get;~userid};!=;;for **{usernick;{get;~userid}}**{space};{if;{get;~corpid};!=;;for **{rolename;{get;~corpid}} members**{space}}}from {time;MMM D, H:mm;{get;~minT};x} to {time;MMM D, H:mm;{get;~maxT};x} (UTC)
```Corp{space;2}{foreach;~rs;{get;~rsLevels};{realpad;RS{get;~rs};4;{space};right}}|{space;1}Total{push;~corps;N/A}
{foreach;~corp;{get;~corps};
{realpad;{get;~corp};6;{space};right}{foreach;~rs;{get;~rsLevels};{realpad;{get;~res_{get;~rs}_{get;~corp}};3;{space};left}{space;1}}|{space}{realpad;{get;~res_total_{get;~corp}};5;{space};left}{newline}}Total{space;1}{foreach;~rs;{get;~rsLevels};{void;{increment;~total;{get;~res_{get;~rs}_total}}}{realpad;{get;~res_{get;~rs}_total};3;{space};left}{space;1}}|{realpad;{get;~total};6;{space};left}```
}

{set;~seasons;[2,3,4]}
{set;~season;4}
{set;~search;}
{if;{argslength};>;0;
  {if;{indexof;{get;~seasons};{args;0}};!=;-1;
    {set;~season;{args;0}}
    {if;{argslength};>;1;{set;~search;{args;1}}}
  	;{//; user | corp given}
    {set;~search;{args;0}}
  }
}
{set;~Estart;{get;_rsEvent{get;~season}_start}}{//;{set;~start;{math;-;{time;X};7200}}{//; 2 hours ago}}
{set;~Eend;{get;_rsEvent{get;~season}_end}}
{if;{get;~Eend};==;;{set;~Eend;{math;+;{get;~Estart};604800}}}
{set;~now;{time;X}}
{if;{get;~now};<;{get;~Estart};
  The **Private Red Star Event SEASON {get;~season}** is starting in **{trim;{execcc;TimeDiff;twodivs;{get;~Estart};{get;~now}}}**
    Statistics for the last 24 hours
    {trim;{func.stats;{math;-;{time;X};86400};{time;X}}}  
  ;
  {if;{get;~now};>;{get;~Eend};Private Red Star Event SEASON {get;~season} is over.
    {trim;{func.stats;{get;~Estart};{get;~Eend};{get;~search}}}
  	;
    Ongoing statistics for the RS event SEASON {get;~season} (ending in **{trim;{execcc;TimeDiff;;{get;~Eend};{get;~now}}}**)
    {trim;{func.stats;{get;~Estart};{get;~Eend};{get;~search}}}
    {if;{time;X};>;{get;~eEnd};
    Statistics for the last 24 hours
    {trim;{func.stats;{math;-;{time;X};86400};{time;X};{get;~search}}}
    }
  }
}