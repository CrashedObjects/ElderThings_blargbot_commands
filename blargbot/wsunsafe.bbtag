{//;changelog
2018-11-28: wsinit, POH added
2018-11-30: moved to guild vars
}

{//;returns corps that are not safe to jump to, because they are either scanning or ending shortly}
{execcc;wsinit;g}
{set;~corpNicks;{get;_corp-name-main}}
{set;~corpIDs;{get;_ws-role-main}}
{set;~wsIcons;{get;_ws-icon-main}}

{set;~howToUse;wsunsafe [userid[,userid]]}
{set;~wsTagIndices;[]}{//;create empty array for the matching corps}
{if;{argslength};==;0;{for;~index;0;<;{length;{get;~corpIDs}};{push;~wsTagIndices;{get;~index}}}}
{if;{argslength};==;1;{//; userID(s) given}
  {set;~dbg;[]}
  {void;{foreach;~userid;{split;{args;0};,};
	{set;~userroles;{userroles;{get;~userid}}}
    {push;~dbg;uid={get;~userid}, roles={join;{get;~userroles};,}}
	{void;{foreach;~urole;{get;~userroles};
      {set;~wsTagind;{indexof;{get;~corpIDs};{get;~urole}}}
	  {if;{get;~wsTagind};>;-1;{//;user has this ws-tag}
	    {if;{indexof;{get;~wsTagIndices};{get;~wsTagind}};==;-1;{//;not already in}
          {push;~wsTagIndices;{get;~wsTagind}}
        }
	  }
    }}
  }}
  {push;~dbg;ws={get;~wsTagIndices}}
{//;{join;~dbg;{newline}}}
}
{//;now only check the ws-tags in wsTagIndices}
{set;~uns;[0]}{void;{pop;~uns}}{//;create empty array for the unsafe corps}
{set;~dbg;dbg: uid: {join;{get;~userIDs};,}, corpIDs: {join;{get;~corpIDs};,}, wsTagIndices: {join;{get;~wsTagIndices};,}}
{void;{for;~index;0;<;{length;{get;~wsTagIndices}};
  	{set;~wsTagInd;{get;~wsTagIndices;{get;~index}}}
  	{set;~wsStatus;-1}
    {set;~roleid;{get;~corpIDs;{get;~wsTagInd}}}
    {if;{length;{get;_{get;~roleid}WSScan}};>;0;{set;~wsScan;{get;_{get;~roleid}WSScan}};{set;~wsScan;-1}}
  	{if;{length;{get;_{get;~roleid}WSEnd}};>;0;{set;~wsEnd;{get;_{get;~roleid}WSEnd}};{set;~wsEnd;-1}}
    {if;{logic;||;{bool;{get;~wsEnd};>;0};{bool;{get;~wsScan};>;0}};
	  {if;{get;~wsScan};>;0;
        {set;~wsStatus;SCANNING}
        {set;~dbg;{get;~dbg}, ti={get;~wsTagInd}, wsEnd={get;~wsEnd}, wsScan={get;~wsScan}: status={get;~wsStatus}}
        ;
        {set;~wsSecondsLeft;{math;-;{get;~wsEnd};{time;X}}}
        {set;~wsMinLeft;{floor;{math;/;{get;~wsSecondsLeft};60}}}
        {if;{logic;&&;{bool;{get;~wsSecondsLeft};>;0};{bool;{get;~wsSecondsLeft};<;3600}};
          {set;~wsStatus;ENDING in {get;~wsMinLeft} minutes}
          {set;~dbg;{get;~dbg}, ti={get;~wsTagInd}, wsEnd={get;~wsEnd}, wsScan={get;~wsScan}: status={get;~wsStatus}}
      	;
        }
      }
	  {if;{get;~wsStatus};!=;-1;
        {push;~uns;
          {if;{get;~wsTagInd};>;-1;{get;~wsIcons;{get;~wsTagInd}}{get;~corpNicks;{get;~wsTagInd}};{get;~corpNicks;{get;~index}}} {get;~wsStatus}
        }
        ;
      }
    }
}}
{//; check is anyone in the queue is an opponent}
{//;
{set;~wsRoles;[]}
{set;~oppRoles;[]}
{set;~warn;[]}{set;~unsafe;[]}{set;~warnmsg;}
{set;~acviteWSoppRoles;[]}{set;~wsIndex;-1}{set;~now;{time;X}}
{void;
  {repeat;
  	{set;~ws;{get;~wsRoles;{increment;~wsIndex}}};
	{if;{get;_{get;~ws}WSEnd};>;{get;~now};{push;~activeWSoppRoles;{get;~oppRoles;{get;~wsIndex}};}}
  	;{length;{get;~wsRoles}}
  }
  {foreach;~uid;{get;~queue};
    {void;{foreach;~opp;{get;~acviteWSoppRoles};
  	  {if;{userhasrole;{get;~opp};{get;~uid}};==;true;
  	    {push;~warn;{usernick;{get;~uid}} has {rolename;{get;~opp}}}
        {set;~corpName;{get;~corpNames;{indexof;{get;~oppRoles};{get;~opp}}}}
        {push;~unsafe;{get;~corpName}}
        {if;{get;~placemsg};includes;{get;~corpName};{set;~placemsg;{space}where?}}
      }
    }}
  }
{if;{length;{get;~unsafe}};>;0;{push;~uns;{newline}Attention: {join;~warn;,{space}}.{space}**Do NOT run this RS in {join;~unsafe;,{space}}!**}}
}
}
{//;{get;~dbg}}
{join;{get;~uns};,{space}}